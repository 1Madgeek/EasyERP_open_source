.list(@font-size: 10px, @defaultProgressColor: #f5f5f5, @defaultBorderColor: @list-border-color) {
  font-family: @fontRegular;
  width: 100%;

  td, th {
    //main themse for all list
    height: 23px;
    padding: 0 6px;
    white-space: nowrap;
    text-overflow: ellipsis;
    box-sizing: border-box;
    color: @mainText-color;
    line-height: 23px;
    font-size: @font-size;
  }
  td {
    overflow: hidden;
  }

  thead {
    tr {
      border: none;
      height: 30px;
      vertical-align: middle;
    }

    th {
      font-size: @font-size;
      font-family: @fontSemiBold;
      text-align: right;
    }
  }

  tbody {

    td {
      //border: @thin-border @defaultBorderColor;
      text-align: right;
      height: 50px;
      &.changeContent {
        border-top: 2px solid @success;
        border-bottom: 2px solid @success;
      }
    }

    tr {
      &:last-child {
        border-bottom: @thin-border @defaultBorderColor;
      }
    }
  }

  tbody,
  thead {
    tr {
      border-top: @thin-border @defaultBorderColor;
    }
  }

  tfoot {
    td {
      text-align: right;
    }
  }

  thead, tfoot {
    tr {
      background: inherit !important; //hover should not work in a hover and footer tr
    }
  }

  .notForm {
    input {
      margin-top: 3px;
      cursor: pointer;
      display: inline-block;
      vertical-align: top;
    }
  }

  .oe_sortable, .oe_sortable_sub {
    //style for sort arrows in thead
    cursor: pointer;
    position: relative;
    //padding-right: 15px;
    .arrow {
      display: none;
      text-align: center;
      cursor: pointer;
      font-family: FontAwesome;
      position: absolute;
      top: 2px;
      right: -8px;
    }
    &.sortUp {
      .up,
      .down {
        display: inline-block;
        &:before {
          content: "\f176";
        }
      }
    }
    &.sortDn {
      .down {
        &:before {
          -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
        }
      }
    }

  }

  .enableTableOdd {
    // class to enabled table odd color (add to tbody)
    tr {
      //&:nth-child(odd) {
      //  &:not(.innerRow) {
      //    background-color: @defaultBgColorOdd-color;
      //  }
      //}
      &:not(.innerRow) {
        &:hover {
          background-color: @defaultBgColorOdd-color;
        }
      }
    }
  }

  .centerCell {
    //(add to td)
    text-align: center;
  }

  .leftBorderNone {
    border-left: none;
  }

  .cancelled {
    a {
      text-decoration: line-through;
    }
  }
  &.enable_hover {
    // enable hover in table (add to table)
    tbody {
      tr {
        &:hover {
          background-color: @defaultBgHover-color;
        }
      }
    }
  }

  .overtime { //add new color for overtime tr
    background-color: @list-overtime-bg !important;
  }
}

.salary-list {
  tbody#listTable {
    .subRow {
      &:hover {
        background-color: transparent;
      }
    }
  }
}

.list2 {
  .list;
  table-layout: fixed;

  thead th:first-of-type {
    width: 15%;
  }

  .datepicker {
    width: 90%
  }

  .datepicker.notVisible {
    display: none;
  }

}

.ui-dialog {
  .list2 {
    thead, tbody {
      td {
        text-align: left;
        line-height: 1;
        height: 20px;
      }
    }
    thead {
      th {
        padding-top: 5px;
      }
    }
  }
}

.margin(@t: 5px, @r: 5px, @b: 5px, @l: 5px) {
  margin: @arguments;
}

.tableFixed {
  //  for table layout FIXED
  table-layout: fixed;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.invisible_border {
  // invisible border for td
  border: 1px solid transparent !important;
}
.hireFireTable {
  margin-bottom: 10px;
}

//Class for jobDashboard-jornalEntry

.report-list {
  tr {
    td {
      &:first-child {
        padding: 0;
      }
    }
  }
}

.forCaption {
  color: @forCaption-text-color !important;
  background-color: @forCaption-color;
}

.hireFireTable {
  margin-bottom: 10px;
}


