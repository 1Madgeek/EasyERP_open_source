*, *:before, *:after {
  box-sizing: inherit;
}

.container {
  width: 100%;
  margin: 0 auto;
  display: block;
  max-width: $container-width;
}

@for $i from 1 through $cols {
  .col-#{$i}--max {
    max-width: (($container-width / 12) * $i);
  }
}

.floatCenter {
  margin-left: auto;
  margin-right: auto;
  display: block;
  float: none;
}

.floatLeft {
  float: left;
}

.floatRight {
  float: right;
}

.clearFix:after {
  content: "";
  display: table;
  clear: both;
}

.fullWidth {
  width: 100%;
}

.textLeft {
  text-align: left;
}

.textRight {
  text-align: right;
}

.textCenter {
  text-align: center;
}

@mixin spacing($name, $size, $value) {
  .#{$name}#{$size} {
    #{$name}: $value;
  }

  .#{$name}-top#{$size} {
    #{$name}-top: $value;
  }

  .#{$name}-bottom#{$size} {
    #{$name}-bottom: $value;
  }

  .#{$name}-right#{$size} {
    #{$name}-right: $value;
  }

  .#{$name}-left#{$size} {
    #{$name}-left: $value;
  }
}

@include spacing('margin', 'Sm', $small-spacing);
@include spacing('margin', 'Md', $medium-spacing);
@include spacing('margin', 'Lg', $large-spacing);
@include spacing('padding', 'Sm', $small-spacing);
@include spacing('padding', 'Md', $medium-spacing);
@include spacing('padding', 'Lg', $large-spacing);



[class^="flexRow"] > .col, [class^="flexRow"] > [class^="col-"] {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  width: 100%;
  padding: 0 $gutter/2 $gutter $gutter/2;
  display: block;

  @media (min-width: $xl-break) {
    padding: 0 ($gutter*2)/2 $gutter*2 ($gutter*2)/2;
  }
}

[class^="flexRow"] > [class^="col-"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

[class^="flexRow"] {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -js-display: flex;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

// polyfill workaround https://github.com/10up/flexibility/issues/34
:root [class^="flexRow"] {
  margin-left: -$gutter/2;
  margin-right: -$gutter/2;

  @media (min-width: $xl-break) {
    margin-left: -($gutter*2)/2;
    margin-right: -($gutter*2)/2;
  }
}

.flexRow {
  &Middle {
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  }

  &Top {
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  }

  &Bottom {
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end;
  }

  &Center {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }

  &Reverse {
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  }

  &Around {
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }

  &Between {
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }

  &Stretch {
    align-items: stretch;
    flex-flow: row wrap;
    justify-content: flex-start;
  }

  &Stretch > .col, &Stretch > [class^="col-"] {
    -js-display: flex;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  &GutterNone > .col, &GutterNone > [class^="col-"] {
    padding: 0;
  }

  &GutterBottomNone > .col, &GutterBottomNone > [class^="col-"] {
    padding: 0 $gutter/2 0 $gutter/2;

    @media (min-width: $xl-break) {
      padding: 0 ($gutter*2)/2 0 ($gutter*2)/2;
    }
  }

  &GutterBetweenNone > .col, &GutterBetweenNone > [class^="col-"] {
    padding: 0 0 $gutter 0;

    @media (min-width: $xl-break) {
      padding: 0 0 $gutter*2 0;
    }
  }
}

.colFirst {
  -webkit-order: -1;
  -ms-flex-order: -1;
  order: -1;
}

.colLast {
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
}

.show {
  display: block;
}

.hide {
  display: none;
}

@for $i from 1 through $cols {
  [class^="flexRow"] > .col-#{$i} {
    max-width: percentage($i/$cols);
    width: percentage($i/$cols);
  }
}

@mixin columnGenerator($suffix) {
  @for $i from 1 through $cols {
    [class^="flexRow"] > .col-#{$i}\@#{$suffix} {
      max-width: percentage($i/$cols);
      width: percentage($i/$cols);
    }
  }

  .show\@#{$suffix} {
    display: block;
  }

  .hide\@#{$suffix} {
    display: none;
  }

  .colFirst\@#{$suffix} {
    -webkit-order: -1;
    -ms-flex-order: -1;
    order: -1;
  }

  .colLast\@#{$suffix} {
    -webkit-order: 1;
    -ms-flex-order: 1;
    order: 1;
  }
}

@media (min-width: $sm-break) {
  @include columnGenerator('sm');
}

@media (min-width: $md-break) {
  @include columnGenerator('md');
}

@media (min-width: $lg-break) {
  @include columnGenerator('lg');
}

@media (min-width: $xl-break) {
  @include columnGenerator('xl');
}